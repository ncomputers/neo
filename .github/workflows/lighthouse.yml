name: lighthouse-ci

on:
  push:
  pull_request:

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: neo
          POSTGRES_PASSWORD: neo
          POSTGRES_DB: neo
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U neo" --health-interval=10s --health-timeout=5s --health-retries=5
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping || exit 1"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=20
    env:
      POSTGRES_MASTER_URL: postgresql://neo:neo@localhost:5432/neo
      DATABASE_URL: postgresql://neo:neo@localhost:5432/neo
      SQLALCHEMY_DATABASE_URI: postgresql://neo:neo@localhost:5432/neo
      SYNC_DATABASE_URL: postgresql://neo:neo@localhost:5432/neo
      REDIS_URL: redis://localhost:6379/0
      ALLOWED_ORIGINS: http://localhost
      SECRET_KEY: 0123456789abcdef0123456789abcdef
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install pnpm
        run: corepack enable && corepack prepare pnpm@latest --activate
      - name: Verify pnpm installation
        run: pnpm --version
      - name: Install Node dependencies
        run: pnpm install --frozen-lockfile
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r api/requirements.txt
      - name: Install Lighthouse CI
        run: npm i -g @lhci/cli@0.13.x
      - name: Wait for Postgres
        run: |
          until pg_isready -h localhost -U neo; do
            echo "Waiting for Postgres..."
            sleep 1
          done
      - name: Run migrations
        run: |
          python -m alembic -c api/alembic.ini -x db_url=$SYNC_DATABASE_URL upgrade head
      - name: Start API server
        env:
          ALLOWED_ORIGINS: ${{ env.ALLOWED_ORIGINS }}
          SECRET_KEY: ${{ env.SECRET_KEY }}
          SYNC_DATABASE_URL: ${{ env.SYNC_DATABASE_URL }}
        run: |
          set +e
          uvicorn api.app.main:app --host 0.0.0.0 --port 8000 > api.log 2>&1 &
      - name: Wait for /ready
        run: bash scripts/ci_wait_ready.sh api.log
      - name: Run Lighthouse CI
        run: lhci autorun --config=lighthouserc.json

      - name: Upload Lighthouse reports
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: lighthouse
