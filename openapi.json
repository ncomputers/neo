{
  "openapi": "3.1.0",
  "info": {
    "title": "Neo API",
    "version": "1.0.0-rc"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/api/outlet/{tenant_id}/accounting/sales_register.csv": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Sales register CSV",
        "operationId": "sales_register_csv_api_outlet__tenant_id__accounting_sales_register_csv_get",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "composition",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/accounting/gst_summary.csv": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "GST summary CSV",
        "operationId": "gst_summary_csv_api_outlet__tenant_id__accounting_gst_summary_csv_get",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "composition",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/login/email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login with email",
        "description": "Authenticate using username/password and return a JWT.",
        "operationId": "email_login_login_email_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Email Login Login Email Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/login/pin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login with PIN",
        "description": "Authenticate using a short numeric PIN.",
        "operationId": "pin_login_login_pin_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PinLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Pin Login Login Pin Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin": {
      "get": {
        "summary": "Admin Area",
        "description": "Endpoint accessible to high-privilege roles only.",
        "operationId": "admin_area_admin_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/staff": {
      "get": {
        "summary": "Staff Area",
        "description": "Endpoint for general staff roles.",
        "operationId": "staff_area_staff_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/tenants": {
      "post": {
        "summary": "Create Tenant",
        "operationId": "create_tenant_tenants_post",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "licensed_tables",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Licensed Tables"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Tenant Tenants Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "List all orders",
        "description": "Return all orders across tables for staff views.",
        "operationId": "list_orders_orders_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "items": {
                      "additionalProperties": true,
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "type": "object",
                  "title": "Response List Orders Orders Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Order",
        "operationId": "create_order_orders_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Create Order Orders Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/subscription/renew": {
      "post": {
        "summary": "Renew Subscription",
        "operationId": "renew_subscription_tenants__tenant_id__subscription_renew_post",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_renew_subscription_tenants__tenant_id__subscription_renew_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Renew Subscription Tenants  Tenant Id  Subscription Renew Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenant_id}/subscription/payments/{payment_id}/verify": {
      "post": {
        "summary": "Verify Payment",
        "operationId": "verify_payment_tenants__tenant_id__subscription_payments__payment_id__verify_post",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "payment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Payment Id"
            }
          },
          {
            "name": "months",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Months"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Verify Payment Tenants  Tenant Id  Subscription Payments  Payment Id  Verify Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health",
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Health Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/tables": {
      "get": {
        "summary": "List Tables",
        "description": "Return all tables and their statuses.",
        "operationId": "list_tables_tables_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "items": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "type": "object",
                  "title": "Response List Tables Tables Get"
                }
              }
            }
          }
        }
      }
    },
    "/tables/{table_id}/cart": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Add item to cart",
        "description": "Add an item to a table's cart.\n\nMultiple guests may add items concurrently by specifying a ``guest_id``.",
        "operationId": "add_to_cart_tables__table_id__cart_post",
        "parameters": [
          {
            "name": "table_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Table Id"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Accept-Language"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Add To Cart Tables  Table Id  Cart Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tables/{table_id}/order": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Place order",
        "description": "Move all cart items to the order, locking them from guest edits.",
        "operationId": "place_order_tables__table_id__order_post",
        "parameters": [
          {
            "name": "table_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Table Id"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Accept-Language"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Place Order Tables  Table Id  Order Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tables/{table_id}/order/{index}": {
      "patch": {
        "tags": [
          "Orders"
        ],
        "summary": "Update order line",
        "description": "Allow an admin to soft-cancel an order line by setting ``quantity`` to 0.",
        "operationId": "update_order_tables__table_id__order__index__patch",
        "parameters": [
          {
            "name": "table_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Table Id"
            }
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Index"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQuantity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Update Order Tables  Table Id  Order  Index  Patch"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tables/{table_id}/staff-order": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Staff place order",
        "description": "Staff directly place an order for a guest without a phone.",
        "operationId": "staff_place_order_tables__table_id__staff_order_post",
        "parameters": [
          {
            "name": "table_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Table Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Staff Place Order Tables  Table Id  Staff Order Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{table_id}/{index}/accept": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Accept order line",
        "description": "Mark an order line as accepted.",
        "operationId": "accept_order_orders__table_id___index__accept_post",
        "parameters": [
          {
            "name": "table_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Table Id"
            }
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Index"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Accept Order Orders  Table Id   Index  Accept Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{table_id}/{index}/reject": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Reject order line",
        "description": "Mark an order line as rejected.",
        "operationId": "reject_order_orders__table_id___index__reject_post",
        "parameters": [
          {
            "name": "table_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Table Id"
            }
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Index"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Reject Order Orders  Table Id   Index  Reject Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tables/{table_id}/bill": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get table bill",
        "description": "Return the running bill for a table.",
        "operationId": "bill_tables__table_id__bill_get",
        "parameters": [
          {
            "name": "table_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Table Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Bill Tables  Table Id  Bill Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tables/{table_id}/pay": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Pay table bill",
        "description": "Settle the current bill and clear outstanding orders.",
        "operationId": "pay_now_tables__table_id__pay_post",
        "parameters": [
          {
            "name": "table_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Table Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Pay Now Tables  Table Id  Pay Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tables/{table_id}/call/{action}": {
      "post": {
        "tags": [
          "Staff"
        ],
        "summary": "Call staff",
        "description": "Queue a staff call request for the given table.",
        "operationId": "call_staff_tables__table_id__call__action__post",
        "parameters": [
          {
            "name": "table_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Table Id"
            }
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Action"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Call Staff Tables  Table Id  Call  Action  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tables/{table_id}/lock": {
      "post": {
        "tags": [
          "Tables"
        ],
        "summary": "Lock table",
        "description": "Lock a table after settlement until cleaned.",
        "operationId": "lock_table_tables__table_id__lock_post",
        "parameters": [
          {
            "name": "table_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Table Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Lock Table Tables  Table Id  Lock Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tables/{table_id}/mark-clean": {
      "post": {
        "tags": [
          "Tables"
        ],
        "summary": "Mark table clean",
        "description": "Mark a table as cleaned and ready for new guests.",
        "operationId": "mark_clean_tables__table_id__mark_clean_post",
        "parameters": [
          {
            "name": "table_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Table Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Mark Clean Tables  Table Id  Mark Clean Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/magic/start": {
      "post": {
        "summary": "Magic Start",
        "description": "Begin magic-link login and email a one-time token.",
        "operationId": "magic_start_auth_magic_start_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Magic Start Auth Magic Start Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/magic/consume": {
      "get": {
        "summary": "Magic Consume",
        "description": "Redeem a magic link token and return a session JWT.",
        "operationId": "magic_consume_auth_magic_consume_get",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Magic Consume Auth Magic Consume Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/2fa/setup": {
      "post": {
        "summary": "Setup 2Fa",
        "operationId": "setup_2fa_auth_2fa_setup_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/auth/2fa/enable": {
      "post": {
        "summary": "Enable 2Fa",
        "operationId": "enable_2fa_auth_2fa_enable_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/auth/2fa/disable": {
      "post": {
        "summary": "Disable 2Fa",
        "operationId": "disable_2fa_auth_2fa_disable_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/auth/2fa/verify": {
      "post": {
        "summary": "Verify 2Fa",
        "operationId": "verify_2fa_auth_2fa_verify_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/auth/2fa/stepup": {
      "post": {
        "summary": "Stepup 2Fa",
        "description": "Verify a TOTP code for the current session.",
        "operationId": "stepup_2fa_auth_2fa_stepup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/auth/2fa/backup": {
      "get": {
        "summary": "Backup Codes",
        "operationId": "backup_codes_auth_2fa_backup_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/g/{table_token}/menu": {
      "get": {
        "summary": "Fetch Menu",
        "description": "Return menu categories and items for guests with caching and ETag support.",
        "operationId": "fetch_menu_g__table_token__menu_get",
        "parameters": [
          {
            "name": "table_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Table Token"
            }
          },
          {
            "name": "tenant_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "If-None-Match"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Accept-Language"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Fetch Menu G  Table Token  Menu Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/g/{table_token}/order": {
      "post": {
        "summary": "Create Guest Order",
        "description": "Create a new order for ``table_token`` within the tenant context.",
        "operationId": "create_guest_order_g__table_token__order_post",
        "parameters": [
          {
            "name": "table_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Table Token"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api__app__routes_guest_order__OrderPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Guest Order G  Table Token  Order Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/g/{table_token}/bill": {
      "post": {
        "summary": "Generate Bill",
        "description": "Generate an invoice for a dining session.\n\nThis endpoint currently acts as a stub; the database wiring to resolve\n``table_token`` and persist invoices will be added later. ``payload`` may\ninclude an optional ``tip`` amount which is added after tax.",
        "operationId": "generate_bill_g__table_token__bill_post",
        "parameters": [
          {
            "name": "table_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Table Token"
            }
          },
          {
            "name": "tenant_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "additionalProperties": true
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Payload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Generate Bill G  Table Token  Bill Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/g/consent": {
      "post": {
        "summary": "Save Consent",
        "operationId": "save_consent_g_consent_post",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Save Consent G Consent Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c/{counter_token}/menu": {
      "get": {
        "summary": "Fetch Menu",
        "description": "Return menu categories and items for the counter.",
        "operationId": "fetch_menu_c__counter_token__menu_get",
        "parameters": [
          {
            "name": "counter_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Counter Token"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "If-None-Match"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Accept-Language"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Fetch Menu C  Counter Token  Menu Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c/{counter_token}/order": {
      "post": {
        "summary": "Create Order",
        "operationId": "create_order_c__counter_token__order_post",
        "parameters": [
          {
            "name": "counter_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Counter Token"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api__app__routes_counter__OrderPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Order C  Counter Token  Order Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/h/{room_token}/menu": {
      "get": {
        "summary": "Fetch Menu",
        "description": "Return menu categories and items for hotel rooms with ETag and caching.",
        "operationId": "fetch_menu_h__room_token__menu_get",
        "parameters": [
          {
            "name": "room_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Room Token"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "If-None-Match"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Accept-Language"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Fetch Menu H  Room Token  Menu Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/h/{room_token}/order": {
      "post": {
        "summary": "Create Order",
        "operationId": "create_order_h__room_token__order_post",
        "parameters": [
          {
            "name": "room_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Room Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api__app__routes_guest_hotel__OrderPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Order H  Room Token  Order Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/h/{room_token}/request/cleaning": {
      "post": {
        "summary": "Request Cleaning",
        "operationId": "request_cleaning_h__room_token__request_cleaning_post",
        "parameters": [
          {
            "name": "room_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Room Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Request Cleaning H  Room Token  Request Cleaning Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/invoice/{invoice_id}/pdf": {
      "get": {
        "summary": "Invoice Pdf",
        "description": "Return a PDF (or HTML fallback) for ``invoice_id``.",
        "operationId": "invoice_pdf_invoice__invoice_id__pdf_get",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "80mm",
                "A4"
              ],
              "type": "string",
              "default": "80mm",
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/billing": {
      "get": {
        "summary": "Billing Info",
        "description": "Return subscription details and payment link for the tenant.",
        "operationId": "billing_info_billing_get",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Billing Info Billing Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/onboarding/start": {
      "post": {
        "summary": "Start Onboarding",
        "description": "Create an onboarding session and return its identifier.",
        "operationId": "start_onboarding_api_onboarding_start_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Start Onboarding Api Onboarding Start Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/onboarding/{onboarding_id}/profile": {
      "post": {
        "summary": "Set Profile",
        "operationId": "set_profile_api_onboarding__onboarding_id__profile_post",
        "parameters": [
          {
            "name": "onboarding_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Onboarding Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Set Profile Api Onboarding  Onboarding Id  Profile Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/onboarding/{onboarding_id}/tax": {
      "post": {
        "summary": "Set Tax",
        "operationId": "set_tax_api_onboarding__onboarding_id__tax_post",
        "parameters": [
          {
            "name": "onboarding_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Onboarding Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tax"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Set Tax Api Onboarding  Onboarding Id  Tax Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/onboarding/{onboarding_id}/tables": {
      "post": {
        "summary": "Set Tables",
        "operationId": "set_tables_api_onboarding__onboarding_id__tables_post",
        "parameters": [
          {
            "name": "onboarding_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Onboarding Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tables"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Set Tables Api Onboarding  Onboarding Id  Tables Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/onboarding/{onboarding_id}/payments": {
      "post": {
        "summary": "Set Payments",
        "operationId": "set_payments_api_onboarding__onboarding_id__payments_post",
        "parameters": [
          {
            "name": "onboarding_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Onboarding Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payments"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Set Payments Api Onboarding  Onboarding Id  Payments Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/onboarding/{onboarding_id}/finish": {
      "post": {
        "summary": "Finish Onboarding",
        "operationId": "finish_onboarding_api_onboarding__onboarding_id__finish_post",
        "parameters": [
          {
            "name": "onboarding_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Onboarding Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Finish Onboarding Api Onboarding  Onboarding Id  Finish Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/qrpack.pdf": {
      "get": {
        "summary": "Qrpack Pdf",
        "operationId": "qrpack_pdf_api_outlet__tenant_id__qrpack_pdf_get",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "A4",
                "A3",
                "Letter"
              ],
              "type": "string",
              "default": "A4",
              "title": "Size"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "title": "Per Page"
            }
          },
          {
            "name": "show_logo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Show Logo"
            }
          },
          {
            "name": "label_fmt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "Table {n}",
              "title": "Label Fmt"
            }
          },
          {
            "name": "pack_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Pack Id"
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Count"
            }
          },
          {
            "name": "requester",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Requester"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Reason"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/orders/{order_id}/void/request": {
      "post": {
        "summary": "Request Void",
        "description": "Record a void request for ``order_id`` with ``reason``.",
        "operationId": "request_void_api_outlet__tenant_id__orders__order_id__void_request_post",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoidRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Request Void Api Outlet  Tenant Id  Orders  Order Id  Void Request Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/orders/{order_id}/void/approve": {
      "post": {
        "summary": "Approve Void",
        "description": "Approve a pending void and adjust invoice totals.",
        "operationId": "approve_void_api_outlet__tenant_id__orders__order_id__void_approve_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Approve Void Api Outlet  Tenant Id  Orders  Order Id  Void Approve Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/kot/{order_id}.pdf": {
      "get": {
        "summary": "Kot Pdf",
        "description": "Return a printable KOT for ``order_id``.\n\nTries counter, table and room orders in that sequence. Falls back to\nreturning HTML when WeasyPrint is unavailable.",
        "operationId": "kot_pdf_api_outlet__tenant_id__kot__order_id__pdf_get",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "const": "80mm",
              "type": "string",
              "default": "80mm",
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/kds/queue": {
      "get": {
        "summary": "List Queue",
        "description": "Return active orders along with printer agent status.",
        "operationId": "list_queue_api_outlet__tenant_id__kds_queue_get",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Queue Api Outlet  Tenant Id  Kds Queue Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/kds/order/{order_id}/accept": {
      "post": {
        "summary": "Accept Order",
        "description": "Mark an order as accepted.",
        "operationId": "accept_order_api_outlet__tenant_id__kds_order__order_id__accept_post",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Accept Order Api Outlet  Tenant Id  Kds Order  Order Id  Accept Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/kds/order/{order_id}/progress": {
      "post": {
        "summary": "Progress Order",
        "description": "Move an order to ``IN_PROGRESS``.",
        "operationId": "progress_order_api_outlet__tenant_id__kds_order__order_id__progress_post",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Progress Order Api Outlet  Tenant Id  Kds Order  Order Id  Progress Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/kds/order/{order_id}/ready": {
      "post": {
        "summary": "Ready Order",
        "description": "Mark an order as ready.",
        "operationId": "ready_order_api_outlet__tenant_id__kds_order__order_id__ready_post",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Ready Order Api Outlet  Tenant Id  Kds Order  Order Id  Ready Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/kds/order/{order_id}/serve": {
      "post": {
        "summary": "Serve Order",
        "description": "Mark an order as served.",
        "operationId": "serve_order_api_outlet__tenant_id__kds_order__order_id__serve_post",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Serve Order Api Outlet  Tenant Id  Kds Order  Order Id  Serve Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/kds/order/{order_id}/reject": {
      "post": {
        "summary": "Reject Order",
        "description": "Mark an order as rejected.",
        "operationId": "reject_order_api_outlet__tenant_id__kds_order__order_id__reject_post",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Reject Order Api Outlet  Tenant Id  Kds Order  Order Id  Reject Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/kds/item/{order_item_id}/accept": {
      "post": {
        "summary": "Accept Item",
        "description": "Mark an order item as accepted.",
        "operationId": "accept_item_api_outlet__tenant_id__kds_item__order_item_id__accept_post",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "order_item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Item Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Accept Item Api Outlet  Tenant Id  Kds Item  Order Item Id  Accept Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/kds/item/{order_item_id}/progress": {
      "post": {
        "summary": "Progress Item",
        "description": "Move an order item to ``IN_PROGRESS``.",
        "operationId": "progress_item_api_outlet__tenant_id__kds_item__order_item_id__progress_post",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "order_item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Item Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Progress Item Api Outlet  Tenant Id  Kds Item  Order Item Id  Progress Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/kds/item/{order_item_id}/ready": {
      "post": {
        "summary": "Ready Item",
        "description": "Mark an order item as ready.",
        "operationId": "ready_item_api_outlet__tenant_id__kds_item__order_item_id__ready_post",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "order_item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Item Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Ready Item Api Outlet  Tenant Id  Kds Item  Order Item Id  Ready Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/kds/item/{order_item_id}/serve": {
      "post": {
        "summary": "Serve Item",
        "description": "Mark an order item as served.",
        "operationId": "serve_item_api_outlet__tenant_id__kds_item__order_item_id__serve_post",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "order_item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Item Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Serve Item Api Outlet  Tenant Id  Kds Item  Order Item Id  Serve Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/kds/item/{order_item_id}/reject": {
      "post": {
        "summary": "Reject Item",
        "description": "Mark an order item as rejected.",
        "operationId": "reject_item_api_outlet__tenant_id__kds_item__order_item_id__reject_post",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "order_item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Item Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Reject Item Api Outlet  Tenant Id  Kds Item  Order Item Id  Reject Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/kds/sla/breach": {
      "post": {
        "summary": "Kds Sla Breach",
        "operationId": "kds_sla_breach_api_outlet__tenant_id__kds_sla_breach_post",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlaBreachIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Kds Sla Breach Api Outlet  Tenant Id  Kds Sla Breach Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/counters/{order_id}/status": {
      "post": {
        "summary": "Update Status",
        "description": "Update status and generate an 80mm invoice when delivered.",
        "operationId": "update_status_api_outlet__tenant_id__counters__order_id__status_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Update Status Api Outlet  Tenant Id  Counters  Order Id  Status Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/staff/login": {
      "post": {
        "summary": "Login",
        "description": "Authenticate a staff member using ``code`` and ``pin``.",
        "operationId": "login_api_outlet__tenant__staff_login_post",
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Login Api Outlet  Tenant  Staff Login Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/staff/{staff_id}/set_pin": {
      "post": {
        "summary": "Set Pin",
        "description": "Set a new PIN for ``staff_id`` and clear login throttling.",
        "operationId": "set_pin_api_outlet__tenant__staff__staff_id__set_pin_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          },
          {
            "name": "staff_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Staff Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPinPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Set Pin Api Outlet  Tenant  Staff  Staff Id  Set Pin Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/staff/me": {
      "get": {
        "summary": "Me",
        "description": "Return authenticated staff details.",
        "operationId": "me_api_outlet__tenant__staff_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/outlet/{tenant}/staff/shifts": {
      "get": {
        "summary": "Staff Shifts",
        "description": "Return staff activity summary for ``date``.\n\nAggregates logins, KOT accepted, tables cleaned, voids and total time\nlogged in for each staff member. Supports CSV via ``format=csv``.",
        "operationId": "staff_shifts_api_outlet__tenant__staff_shifts_get",
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Date"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "json",
              "title": "Format"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/menu/items": {
      "post": {
        "summary": "Create Menu Item",
        "description": "Create a menu item placeholder used for limit checks.",
        "operationId": "create_menu_item_api_outlet__tenant_id__menu_items_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Menu Item Api Outlet  Tenant Id  Menu Items Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Menu Items",
        "description": "Return menu items for admins with optional deleted records.",
        "operationId": "list_menu_items_api_outlet__tenant_id__menu_items_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Menu Items Api Outlet  Tenant Id  Menu Items Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/menu/item/{item_id}/out_of_stock": {
      "post": {
        "summary": "Toggle Out Of Stock",
        "description": "Toggle the out-of-stock status of a menu item.\n\nReturns an empty payload on success.",
        "operationId": "toggle_out_of_stock_api_outlet__tenant_id__menu_item__item_id__out_of_stock_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OutOfStockToggle"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Toggle Out Of Stock Api Outlet  Tenant Id  Menu Item  Item Id  Out Of Stock Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/menu/items/{item_id}/delete": {
      "patch": {
        "summary": "Delete Menu Item",
        "description": "Soft delete a menu item.",
        "operationId": "delete_menu_item_api_outlet__tenant_id__menu_items__item_id__delete_patch",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Menu Item Api Outlet  Tenant Id  Menu Items  Item Id  Delete Patch"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/menu/items/{item_id}/restore": {
      "post": {
        "summary": "Restore Menu Item",
        "description": "Restore a previously deleted menu item.",
        "operationId": "restore_menu_item_api_outlet__tenant_id__menu_items__item_id__restore_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Restore Menu Item Api Outlet  Tenant Id  Menu Items  Item Id  Restore Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/ops/slo": {
      "get": {
        "summary": "Slo Error Budget",
        "description": "Return 30\u2011day error budget by route.",
        "operationId": "slo_error_budget_admin_ops_slo_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "additionalProperties": {
                      "type": "number"
                    },
                    "type": "object"
                  },
                  "type": "object",
                  "title": "Response Slo Error Budget Admin Ops Slo Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/ops/summary": {
      "get": {
        "summary": "Admin Ops Summary",
        "description": "Return uptime and delivery metrics for owners.",
        "operationId": "admin_ops_summary_api_admin_ops_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Admin Ops Summary Api Admin Ops Summary Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/limits/usage": {
      "get": {
        "summary": "Licensing Usage",
        "description": "Return current usage and configured limits for ``tenant``.",
        "operationId": "licensing_usage_api_outlet__tenant__limits_usage_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Licensing Usage Api Outlet  Tenant  Limits Usage Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/menu/import/dryrun": {
      "post": {
        "summary": "Menu Import Dryrun",
        "description": "Validate a CSV file without mutating the database.\n\nReturns ``ok`` along with any ``warnings`` or ``errors`` detected. Also\nreports ``missing_fields`` from the CSV header and a placeholder\n``inferred_hsn`` list for future enhancements.",
        "operationId": "menu_import_dryrun_api_outlet__tenant_id__menu_import_dryrun_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_menu_import_dryrun_api_outlet__tenant_id__menu_import_dryrun_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Menu Import Dryrun Api Outlet  Tenant Id  Menu Import Dryrun Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/alerts/rules": {
      "post": {
        "summary": "Create Rule",
        "operationId": "create_rule_api_outlet__tenant_id__alerts_rules_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RuleCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Rule Api Outlet  Tenant Id  Alerts Rules Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Rules",
        "operationId": "list_rules_api_outlet__tenant_id__alerts_rules_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Rules Api Outlet  Tenant Id  Alerts Rules Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/alerts/outbox": {
      "get": {
        "summary": "List Outbox",
        "operationId": "list_outbox_api_outlet__tenant_id__alerts_outbox_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "queued",
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Outbox Api Outlet  Tenant Id  Alerts Outbox Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/security/unblock_ip": {
      "post": {
        "summary": "Unblock Ip",
        "operationId": "unblock_ip_api_outlet__tenant__security_unblock_ip_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnblockIPPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Unblock Ip Api Outlet  Tenant  Security Unblock Ip Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/jobs/status": {
      "get": {
        "summary": "Jobs Status",
        "description": "Return status information for background workers.",
        "operationId": "jobs_status_api_admin_jobs_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Jobs Status Api Admin Jobs Status Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/admin/dlq": {
      "get": {
        "summary": "List Dlq",
        "operationId": "list_dlq_api_admin_dlq_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Dlq Api Admin Dlq Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/dlq/replay": {
      "post": {
        "summary": "Replay Dlq",
        "operationId": "replay_dlq_api_admin_dlq_replay_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Type"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplayRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Replay Dlq Api Admin Dlq Replay Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/privacy/dsar/export": {
      "post": {
        "summary": "Dsar Export",
        "operationId": "dsar_export_api_outlet__tenant_id__privacy_dsar_export_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DSARRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Dsar Export Api Outlet  Tenant Id  Privacy Dsar Export Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/privacy/dsar/delete": {
      "post": {
        "summary": "Dsar Delete",
        "operationId": "dsar_delete_api_outlet__tenant_id__privacy_dsar_delete_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DSARRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Dsar Delete Api Outlet  Tenant Id  Privacy Dsar Delete Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/privacy/dsar/export": {
      "post": {
        "summary": "Dsar Export",
        "operationId": "dsar_export_privacy_dsar_export_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DSARRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Dsar Export Privacy Dsar Export Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/privacy/dsar/delete": {
      "post": {
        "summary": "Dsar Delete",
        "operationId": "dsar_delete_privacy_dsar_delete_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DSARRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Dsar Delete Privacy Dsar Delete Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/outbox": {
      "get": {
        "summary": "List Outbox",
        "operationId": "list_outbox_api_outlet__tenant_id__outbox_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "pending",
              "title": "Status"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Outbox Api Outlet  Tenant Id  Outbox Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/outbox/{item_id}/retry": {
      "post": {
        "summary": "Retry Outbox",
        "operationId": "retry_outbox_api_outlet__tenant_id__outbox__item_id__retry_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Retry Outbox Api Outlet  Tenant Id  Outbox  Item Id  Retry Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/dlq": {
      "get": {
        "summary": "List Dlq",
        "operationId": "list_dlq_api_outlet__tenant_id__dlq_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Dlq Api Outlet  Tenant Id  Dlq Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/dlq/{item_id}/requeue": {
      "post": {
        "summary": "Requeue Dlq",
        "operationId": "requeue_dlq_api_outlet__tenant_id__dlq__item_id__requeue_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Requeue Dlq Api Outlet  Tenant Id  Dlq  Item Id  Requeue Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/dlq/{item_id}": {
      "delete": {
        "summary": "Delete Dlq",
        "operationId": "delete_dlq_api_outlet__tenant_id__dlq__item_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Dlq Api Outlet  Tenant Id  Dlq  Item Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/webhooks/test": {
      "post": {
        "summary": "Webhook Test",
        "operationId": "webhook_test_api_outlet__tenant_id__webhooks_test_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookTestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Webhook Test Api Outlet  Tenant Id  Webhooks Test Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/webhooks/{item_id}/replay": {
      "post": {
        "summary": "Webhook Replay",
        "operationId": "webhook_replay_api_outlet__tenant_id__webhooks__item_id__replay_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Webhook Replay Api Outlet  Tenant Id  Webhooks  Item Id  Replay Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/orders/batch": {
      "post": {
        "summary": "Ingest Orders Batch",
        "description": "Persist multiple queued orders for ``tenant_id``.\n\nThe batch is limited to 20 orders to bound request sizes.",
        "operationId": "ingest_orders_batch_api_outlet__tenant_id__orders_batch_post",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Ingest Orders Batch Api Outlet  Tenant Id  Orders Batch Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/housekeeping/table/{table_id}/start_clean": {
      "post": {
        "summary": "Start Clean",
        "description": "Mark ``table_id`` as awaiting cleaning.",
        "operationId": "start_clean_api_outlet__tenant__housekeeping_table__table_id__start_clean_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          },
          {
            "name": "table_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Table Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Start Clean Api Outlet  Tenant  Housekeeping Table  Table Id  Start Clean Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/housekeeping/room/{room_id}/start_clean": {
      "post": {
        "summary": "Start Clean Room",
        "description": "Mark ``room_id`` as awaiting cleaning.",
        "operationId": "start_clean_room_api_outlet__tenant__housekeeping_room__room_id__start_clean_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          },
          {
            "name": "room_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Room Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Start Clean Room Api Outlet  Tenant  Housekeeping Room  Room Id  Start Clean Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/housekeeping/table/{table_id}/ready": {
      "post": {
        "summary": "Mark Ready",
        "description": "Mark cleaning complete and reopen the table.",
        "operationId": "mark_ready_api_outlet__tenant__housekeeping_table__table_id__ready_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          },
          {
            "name": "table_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Table Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Mark Ready Api Outlet  Tenant  Housekeeping Table  Table Id  Ready Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/housekeeping/room/{room_id}/ready": {
      "post": {
        "summary": "Mark Room Ready",
        "description": "Mark cleaning complete and reopen the room.",
        "operationId": "mark_room_ready_api_outlet__tenant__housekeeping_room__room_id__ready_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          },
          {
            "name": "room_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Room Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Mark Room Ready Api Outlet  Tenant  Housekeeping Room  Room Id  Ready Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/housekeeping/room/{room_id}/start_clean": {
      "post": {
        "summary": "Start Clean Room",
        "description": "Mark ``room_id`` as awaiting cleaning.",
        "operationId": "start_clean_room_api_outlet_housekeeping_room__room_id__start_clean_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Room Id"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Start Clean Room Api Outlet Housekeeping Room  Room Id  Start Clean Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/housekeeping/room/{room_id}/ready": {
      "post": {
        "summary": "Mark Room Ready",
        "description": "Mark cleaning complete and reopen the room.",
        "operationId": "mark_room_ready_api_outlet_housekeeping_room__room_id__ready_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Room Id"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Mark Room Ready Api Outlet Housekeeping Room  Room Id  Ready Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "Metrics Endpoint",
        "description": "Expose Prometheus metrics.",
        "operationId": "metrics_endpoint_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/admin/analytics/owners": {
      "get": {
        "summary": "Admin Owner Analytics",
        "description": "Return owner cohort and retention metrics for the given range.\n\nResults are cached for 10 minutes to reduce load.",
        "operationId": "admin_owner_analytics_api_admin_analytics_owners_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "range",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 30,
              "title": "Range"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Admin Owner Analytics Api Admin Analytics Owners Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/owner/sla": {
      "get": {
        "summary": "Owner Sla",
        "operationId": "owner_sla_api_owner_sla_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "OwnerSlaResponse",
                  "properties": {
                    "uptime_7d": {"type": "number"},
                    "uptime_trend": {"type": "number"},
                    "webhook_success": {"type": "number"},
                    "webhook_success_trend": {"type": "number"},
                    "median_prep": {"type": "number"},
                    "median_prep_trend": {"type": "number"},
                    "kot_delay_alerts": {"type": "integer"},
                    "kot_delay_alerts_trend": {"type": "integer"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/dashboard/tiles": {
      "get": {
        "summary": "Owner Dashboard Tiles",
        "operationId": "owner_dashboard_tiles_api_outlet__tenant_id__dashboard_tiles_get",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Force"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/dashboard/charts": {
      "get": {
        "summary": "Owner Dashboard Charts",
        "operationId": "owner_dashboard_charts_api_outlet__tenant_id__dashboard_charts_get",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "range",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 7,
              "title": "Range"
            }
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Force"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/owner/{owner_id}/dashboard/charts": {
      "get": {
        "summary": "Owner Dashboard Charts",
        "operationId": "owner_dashboard_charts_api_owner__owner_id__dashboard_charts_get",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner Id"
            }
          },
          {
            "name": "range",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 7,
              "title": "Range"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/owner/{owner_id}/daybook.pdf": {
      "get": {
        "summary": "Owner Daybook Pdf",
        "operationId": "owner_daybook_pdf_api_owner__owner_id__daybook_pdf_get",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner Id"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/preflight": {
      "get": {
        "summary": "Preflight",
        "operationId": "preflight_api_admin_preflight_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Preflight Api Admin Preflight Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/tables": {
      "post": {
        "summary": "Create Table",
        "description": "Create a table placeholder.\n\nActual persistence is handled elsewhere; this endpoint exists for limit\nchecks in tests.",
        "operationId": "create_table_api_outlet__tenant__tables_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TableCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Table Api Outlet  Tenant  Tables Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/tables/{table_id}/position": {
      "post": {
        "summary": "Set Table Position",
        "description": "Persist positional metadata for a table.",
        "operationId": "set_table_position_api_outlet__tenant__tables__table_id__position_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          },
          {
            "name": "table_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Table Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TablePosition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Set Table Position Api Outlet  Tenant  Tables  Table Id  Position Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/tables/map": {
      "get": {
        "summary": "Get Table Map",
        "description": "Return coordinates and states for all tables.",
        "operationId": "get_table_map_api_outlet__tenant__tables_map_get",
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Table Map Api Outlet  Tenant  Tables Map Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/tables/{code}/delete": {
      "patch": {
        "summary": "Delete Table",
        "description": "Soft delete a table.",
        "operationId": "delete_table_api_outlet__tenant__tables__code__delete_patch",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          },
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Table Api Outlet  Tenant  Tables  Code  Delete Patch"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/tables/{code}/restore": {
      "post": {
        "summary": "Restore Table",
        "description": "Restore a previously deleted table.",
        "operationId": "restore_table_api_outlet__tenant__tables__code__restore_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          },
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Restore Table Api Outlet  Tenant  Tables  Code  Restore Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/tables/{code}/qr/rotate": {
      "post": {
        "summary": "Rotate Table Qr",
        "description": "Rotate the QR token for ``code`` and return deeplink and QR data URL.",
        "operationId": "rotate_table_qr_api_outlet__tenant__tables__code__qr_rotate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          },
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Rotate Table Qr Api Outlet  Tenant  Tables  Code  Qr Rotate Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/tables/map/stream": {
      "get": {
        "summary": "Stream Table Map",
        "description": "Stream table state changes via SSE.",
        "operationId": "stream_table_map_api_outlet__tenant__tables_map_stream_get",
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          },
          {
            "name": "last_event_id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Last Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/event-stream": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/time/skew": {
      "get": {
        "summary": "Time Skew",
        "description": "Return the current server epoch time.",
        "operationId": "time_skew_time_skew_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Time Skew Time Skew Get"
                }
              }
            }
          }
        }
      }
    },
    "/pwa/version": {
      "get": {
        "summary": "Pwa Version",
        "operationId": "pwa_version_pwa_version_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Pwa Version Pwa Version Get"
                }
              }
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "summary": "Version",
        "operationId": "version_version_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Version Version Get"
                }
              }
            }
          }
        }
      }
    },
    "/ready": {
      "get": {
        "summary": "Ready",
        "description": "Return readiness status after verifying DB and Redis connectivity.",
        "operationId": "ready_ready_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Ready Ready Get"
                }
              }
            }
          }
        }
      }
    },
    "/admin/troubleshoot": {
      "get": {
        "summary": "Troubleshoot",
        "description": "Run connectivity and version checks for admins.",
        "operationId": "troubleshoot_admin_troubleshoot_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Troubleshoot Admin Troubleshoot Get"
                }
              }
            }
          }
        }
      }
    },
    "/help": {
      "get": {
        "summary": "Help Center",
        "description": "Render bundled help documents with optional outlet branding.",
        "operationId": "help_center_help_get",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/support/contact": {
      "get": {
        "summary": "Support Contact",
        "description": "Return support contact details.",
        "operationId": "support_contact_support_contact_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Support Contact Support Contact Get"
                }
              }
            }
          }
        }
      }
    },
    "/support/ticket": {
      "get": {
        "summary": "List My Tickets",
        "operationId": "list_my_tickets_support_ticket_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response List My Tickets Support Ticket Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "summary": "Create Ticket",
        "operationId": "create_ticket_support_ticket_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Create Ticket Support Ticket Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/admin/support": {
      "get": {
        "summary": "List Tickets",
        "description": "List all support tickets with their status.",
        "operationId": "list_tickets_admin_support_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response List Tickets Admin Support Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/admin/webhooks/probe": {
      "post": {
        "summary": "Admin Webhook Probe",
        "description": "Probe ``payload.url`` and store a report for later inspection.",
        "operationId": "admin_webhook_probe_admin_webhooks_probe_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProbePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Admin Webhook Probe Admin Webhooks Probe Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/admin/integrations": {
      "get": {
        "summary": "List Integrations",
        "operationId": "list_integrations_admin_integrations_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response List Integrations Admin Integrations Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/admin/integrations/{kind}/probe": {
      "post": {
        "summary": "Probe Integration",
        "operationId": "probe_integration_admin_integrations__kind__probe_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "kind",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Kind"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProbePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Probe Integration Admin Integrations  Kind  Probe Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/support/bundle.zip": {
      "get": {
        "summary": "Support Bundle",
        "operationId": "support_bundle_api_outlet__tenant_id__support_bundle_zip_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/legal/{page}": {
      "get": {
        "summary": "Legal Page",
        "description": "Return the named legal page with optional outlet branding.",
        "operationId": "legal_page_legal__page__get",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Page"
            }
          },
          {
            "name": "tenant_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/maintenance/schedule": {
      "post": {
        "summary": "Schedule Maintenance",
        "description": "Set ``maintenance_until`` for ``tenant``.",
        "operationId": "schedule_maintenance_api_outlet__tenant__maintenance_schedule_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaintenancePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Schedule Maintenance Api Outlet  Tenant  Maintenance Schedule Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/close": {
      "post": {
        "summary": "Close Tenant",
        "description": "Mark a tenant as closed and schedule data purge.",
        "operationId": "close_tenant_api_outlet__tenant__close_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Close Tenant Api Outlet  Tenant  Close Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/tenants/{tenant}/restore": {
      "post": {
        "summary": "Restore Tenant",
        "description": "Reactivate a closed tenant if still within the purge window.",
        "operationId": "restore_tenant_api_admin_tenants__tenant__restore_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Restore Tenant Api Admin Tenants  Tenant  Restore Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/tenant/sandbox": {
      "post": {
        "summary": "Create Sandbox Tenant",
        "description": "Create a temporary sandbox tenant with demo data.\n\nThe sandbox copies menu/settings without personal information,\nseeds a couple of demo orders and expires automatically in 7 days.",
        "operationId": "create_sandbox_tenant_api_admin_tenant_sandbox_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Create Sandbox Tenant Api Admin Tenant Sandbox Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/admin/tenant/sandbox": {
      "post": {
        "summary": "Bootstrap Sandbox",
        "description": "Create a temporary sandbox tenant with demo data.\n\nThe sandbox copies menu/settings without personal information, seeds demo\norders and expires automatically in 7 days. An audit entry records the newly\ncreated sandbox tenant identifier.",
        "operationId": "bootstrap_sandbox_admin_tenant_sandbox_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Bootstrap Sandbox Admin Tenant Sandbox Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/outlet/{tenant_id}/backup": {
      "post": {
        "summary": "Backup Tenant",
        "description": "Create a JSON backup for ``tenant_id`` and return the file path.",
        "operationId": "backup_tenant_api_outlet__tenant_id__backup_post",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Backup Tenant Api Outlet  Tenant Id  Backup Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/print/test": {
      "get": {
        "summary": "Print Test",
        "operationId": "print_test_api_outlet__tenant__print_test_get",
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "80mm",
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/print/notify": {
      "post": {
        "summary": "Notify Print",
        "description": "Publish a KOT print event for ``tenant``.",
        "operationId": "notify_print_api_outlet__tenant__print_notify_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrintNotify"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/print/status": {
      "get": {
        "summary": "Printer Status",
        "description": "Return printer agent heartbeat status and retry queue length.",
        "operationId": "printer_status_api_outlet__tenant__print_status_get",
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/push/subscribe": {
      "post": {
        "summary": "Subscribe",
        "description": "Store a Web Push ``subscription`` for ``tenant`` and ``table``.",
        "operationId": "subscribe_api_outlet__tenant__push_subscribe_post",
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          },
          {
            "name": "table",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Table"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushSubscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Subscribe Api Outlet  Tenant  Push Subscribe Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/whatsapp/status": {
      "post": {
        "summary": "Whatsapp Status",
        "operationId": "whatsapp_status_api_outlet__tenant__whatsapp_status_post",
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Whatsapp Status Api Outlet  Tenant  Whatsapp Status Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/checkout/start": {
      "post": {
        "summary": "Checkout Start",
        "operationId": "checkout_start_api_outlet__tenant__checkout_start_post",
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutStart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Checkout Start Api Outlet  Tenant  Checkout Start Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/checkout/webhook": {
      "post": {
        "summary": "Checkout Webhook",
        "operationId": "checkout_webhook_api_outlet__tenant__checkout_webhook_post",
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Checkout Webhook Api Outlet  Tenant  Checkout Webhook Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/payments/{payment_id}/refund": {
      "post": {
        "summary": "Refund Payment",
        "description": "Issue a refund for ``payment_id`` and cache the result for 24h.",
        "operationId": "refund_payment_payments__payment_id__refund_post",
        "parameters": [
          {
            "name": "payment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Payment Id"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Refund Payment Payments  Payment Id  Refund Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/feedback": {
      "post": {
        "summary": "Submit Feedback",
        "description": "Accept an NPS feedback submission from a guest.",
        "operationId": "submit_feedback_api_outlet__tenant__feedback_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Submit Feedback Api Outlet  Tenant  Feedback Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/feedback/summary": {
      "get": {
        "summary": "Feedback Summary",
        "description": "Return aggregated NPS metrics within the given day range.",
        "operationId": "feedback_summary_api_outlet__tenant__feedback_summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          },
          {
            "name": "range",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 30,
              "title": "Range"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Feedback Summary Api Outlet  Tenant  Feedback Summary Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/pilot/{tenant}/feedback": {
      "post": {
        "summary": "Submit Pilot Feedback",
        "description": "Accept an NPS feedback submission for ``tenant``.",
        "operationId": "submit_pilot_feedback_api_pilot__tenant__feedback_post",
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PilotFeedbackIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Submit Pilot Feedback Api Pilot  Tenant  Feedback Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/pilot/admin/feedback/summary": {
      "get": {
        "summary": "Pilot Feedback Summary",
        "description": "Return aggregated score buckets for the given date range.",
        "operationId": "pilot_feedback_summary_api_pilot_admin_feedback_summary_get",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "From"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Pilot Feedback Summary Api Pilot Admin Feedback Summary Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant}/media/upload": {
      "post": {
        "summary": "Upload Media",
        "description": "Validate and persist ``file`` and return its public URL and storage key.",
        "operationId": "upload_media_api_outlet__tenant__media_upload_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_media_api_outlet__tenant__media_upload_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Upload Media Api Outlet  Tenant  Media Upload Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/api-keys": {
      "post": {
        "summary": "Create Api Key",
        "operationId": "create_api_key_api_outlet__tenant_id__api_keys_post",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Api Key Api Outlet  Tenant Id  Api Keys Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Api Keys",
        "operationId": "list_api_keys_api_outlet__tenant_id__api_keys_get",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Api Keys Api Outlet  Tenant Id  Api Keys Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/api-keys/{key_id}": {
      "get": {
        "summary": "Get Api Key",
        "operationId": "get_api_key_api_outlet__tenant_id__api_keys__key_id__get",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Key Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Api Key Api Outlet  Tenant Id  Api Keys  Key Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Api Key",
        "operationId": "delete_api_key_api_outlet__tenant_id__api_keys__key_id__delete",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Key Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Api Key Api Outlet  Tenant Id  Api Keys  Key Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapid/public_key": {
      "get": {
        "summary": "Get Vapid Public Key",
        "description": "Return configured VAPID public key.",
        "operationId": "get_vapid_public_key_vapid_public_key_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Vapid Public Key Vapid Public Key Get"
                }
              }
            }
          }
        }
      }
    },
    "/postman/collection.json": {
      "get": {
        "summary": "Postman Collection",
        "operationId": "postman_collection_postman_collection_json_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/admin/qrpacks/logs": {
      "get": {
        "summary": "List Qrpack Logs",
        "operationId": "list_qrpack_logs_api_admin_qrpacks_logs_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pack_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Pack Id"
            }
          },
          {
            "name": "requester",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Requester"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Reason"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Qrpack Logs Api Admin Qrpacks Logs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/qrpacks/export": {
      "get": {
        "summary": "Export Qrpack Logs",
        "operationId": "export_qrpack_logs_api_admin_qrpacks_export_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pack_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Pack Id"
            }
          },
          {
            "name": "requester",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Requester"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Reason"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/outlets/{tenant_id}/qrposters.zip": {
      "get": {
        "summary": "Qr Poster Pack",
        "operationId": "qr_poster_pack_api_admin_outlets__tenant_id__qrposters_zip_get",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "A4",
                "A5"
              ],
              "type": "string",
              "default": "A4",
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/reports/daybook.pdf": {
      "get": {
        "summary": "Owner Daybook Pdf",
        "description": "Return a daily owner daybook in PDF or HTML format.",
        "operationId": "owner_daybook_pdf_api_outlet__tenant_id__reports_daybook_pdf_get",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/digest/run": {
      "post": {
        "summary": "Run Digest",
        "description": "Send the KPI digest for ``tenant_id`` on ``date``.",
        "operationId": "run_digest_api_outlet__tenant_id__digest_run_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Run Digest Api Outlet  Tenant Id  Digest Run Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/reports/z": {
      "get": {
        "summary": "Daily Z Report",
        "description": "Return a daily Z-report for ``date`` in CSV format.",
        "operationId": "daily_z_report_api_outlet__tenant_id__reports_z_get",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Date"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "csv",
              "title": "Format"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/csp/report": {
      "post": {
        "summary": "Csp Report",
        "operationId": "csp_report_csp_report_post",
        "responses": {
          "204": {
            "description": "Successful Response"
          }
        }
      }
    },
    "/admin/csp/reports": {
      "get": {
        "summary": "Get Csp Reports",
        "operationId": "get_csp_reports_admin_csp_reports_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/reports/gst/monthly": {
      "get": {
        "summary": "Gst Monthly Report",
        "description": "Return a GST-aware monthly CSV for ``month``.\n\n``gst_mode`` determines the output format:\n``reg`` (regular), ``comp`` (composition) or ``unreg`` (unregistered).",
        "operationId": "gst_monthly_report_api_outlet__tenant_id__reports_gst_monthly_get",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Month"
            }
          },
          {
            "name": "gst_mode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "reg",
              "title": "Gst Mode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/exports/daily": {
      "get": {
        "summary": "Daily Export",
        "description": "Return a ZIP bundle of invoices, payments and z-report rows.",
        "operationId": "daily_export_api_outlet__tenant_id__exports_daily_get",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Start"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "End"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10000,
              "title": "Limit"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/outlet/{tenant_id}/export/all.zip": {
      "get": {
        "summary": "Export All",
        "operationId": "export_all_api_outlet__tenant_id__export_all_zip_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tenant Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10000,
              "title": "Limit"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BatchPayload": {
        "properties": {
          "orders": {
            "items": {
              "$ref": "#/components/schemas/QueuedOrder"
            },
            "type": "array",
            "title": "Orders"
          }
        },
        "type": "object",
        "required": [
          "orders"
        ],
        "title": "BatchPayload",
        "description": "Batch of queued orders."
      },
      "Body_menu_import_dryrun_api_outlet__tenant_id__menu_import_dryrun_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_menu_import_dryrun_api_outlet__tenant_id__menu_import_dryrun_post"
      },
      "Body_renew_subscription_tenants__tenant_id__subscription_renew_post": {
        "properties": {
          "screenshot": {
            "type": "string",
            "format": "binary",
            "title": "Screenshot"
          }
        },
        "type": "object",
        "required": [
          "screenshot"
        ],
        "title": "Body_renew_subscription_tenants__tenant_id__subscription_renew_post"
      },
      "Body_upload_media_api_outlet__tenant__media_upload_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_media_api_outlet__tenant__media_upload_post"
      },
      "Breach": {
        "properties": {
          "item": {
            "type": "string",
            "title": "Item"
          },
          "avg_prep": {
            "type": "number",
            "title": "Avg Prep"
          },
          "orders": {
            "type": "integer",
            "title": "Orders"
          },
          "table": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              }
            ],
            "title": "Table"
          }
        },
        "type": "object",
        "required": [
          "item",
          "avg_prep",
          "orders",
          "table"
        ],
        "title": "Breach"
      },
      "CartItem": {
        "properties": {
          "item": {
            "type": "string",
            "title": "Item",
            "example": "Coffee"
          },
          "price": {
            "type": "number",
            "title": "Price",
            "example": 2.5
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity",
            "example": 1
          },
          "guest_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Guest Id",
            "example": "guest-1"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "pending",
            "example": "pending"
          }
        },
        "type": "object",
        "required": [
          "item",
          "price",
          "quantity"
        ],
        "title": "CartItem",
        "description": "An item added by a guest to the cart."
      },
      "CheckoutStart": {
        "properties": {
          "invoice_id": {
            "type": "integer",
            "title": "Invoice Id"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          }
        },
        "type": "object",
        "required": [
          "invoice_id",
          "amount"
        ],
        "title": "CheckoutStart"
      },
      "CodePayload": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "CodePayload"
      },
      "ConsentPayload": {
        "properties": {
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "allow_analytics": {
            "type": "boolean",
            "title": "Allow Analytics",
            "default": false
          },
          "allow_wa": {
            "type": "boolean",
            "title": "Allow Wa",
            "default": false
          }
        },
        "type": "object",
        "title": "ConsentPayload"
      },
      "DSARRequest": {
        "properties": {
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "dry_run": {
            "type": "boolean",
            "title": "Dry Run",
            "default": false
          }
        },
        "type": "object",
        "title": "DSARRequest"
      },
      "EmailLogin": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username",
            "example": "alice@example.com"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "example": "secret123"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "EmailLogin",
        "description": "Email/password login payload."
      },
      "FeedbackIn": {
        "properties": {
          "score": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 0.0,
            "title": "Score",
            "description": "NPS score 0-10"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment",
            "description": "Optional free-form comment"
          }
        },
        "type": "object",
        "required": [
          "score"
        ],
        "title": "FeedbackIn",
        "description": "Incoming NPS feedback payload from a guest."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ItemCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ItemCreate",
        "description": "Minimal payload for creating a menu item."
      },
      "LoginPayload": {
        "properties": {
          "code": {
            "type": "integer",
            "title": "Code"
          },
          "pin": {
            "type": "string",
            "title": "Pin"
          }
        },
        "type": "object",
        "required": [
          "code",
          "pin"
        ],
        "title": "LoginPayload",
        "description": "Credentials for staff PIN login."
      },
      "MaintenancePayload": {
        "properties": {
          "until": {
            "type": "string",
            "format": "date-time",
            "title": "Until"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          }
        },
        "type": "object",
        "required": [
          "until"
        ],
        "title": "MaintenancePayload",
        "description": "Payload for scheduling maintenance."
      },
      "OrderRequest": {
        "properties": {
          "tenant_id": {
            "type": "string",
            "title": "Tenant Id"
          },
          "open_tables": {
            "type": "integer",
            "title": "Open Tables"
          }
        },
        "type": "object",
        "required": [
          "tenant_id",
          "open_tables"
        ],
        "title": "OrderRequest"
      },
      "OutOfStockToggle": {
        "properties": {
          "flag": {
            "type": "boolean",
            "title": "Flag"
          }
        },
        "type": "object",
        "required": [
          "flag"
        ],
        "title": "OutOfStockToggle",
        "description": "Payload for toggling the out-of-stock flag."
      },
      "PaymentModes": {
        "properties": {
          "cash": {
            "type": "boolean",
            "title": "Cash",
            "default": true
          },
          "upi": {
            "type": "boolean",
            "title": "Upi",
            "default": true
          },
          "card": {
            "type": "boolean",
            "title": "Card",
            "default": false
          }
        },
        "type": "object",
        "title": "PaymentModes",
        "description": "Accepted payment modes."
      },
      "Payments": {
        "properties": {
          "vpa": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vpa"
          },
          "central_vpa": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Central Vpa"
          },
          "modes": {
            "$ref": "#/components/schemas/PaymentModes"
          }
        },
        "type": "object",
        "required": [
          "modes"
        ],
        "title": "Payments",
        "description": "Payment configuration for the tenant."
      },
      "PilotFeedbackIn": {
        "properties": {
          "score": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 0.0,
            "title": "Score",
            "description": "0-10 NPS score"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment",
            "description": "Optional free-form comment"
          },
          "contact_opt_in": {
            "type": "boolean",
            "title": "Contact Opt In",
            "description": "Consent for follow-up contact",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "score"
        ],
        "title": "PilotFeedbackIn",
        "description": "Incoming NPS feedback from pilot users."
      },
      "PinLogin": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username",
            "example": "alice"
          },
          "pin": {
            "type": "string",
            "title": "Pin",
            "example": "1234"
          }
        },
        "type": "object",
        "required": [
          "username",
          "pin"
        ],
        "title": "PinLogin",
        "description": "PIN login payload."
      },
      "PrintNotify": {
        "properties": {
          "order_id": {
            "type": "integer",
            "title": "Order Id"
          },
          "size": {
            "type": "string",
            "const": "80mm",
            "title": "Size",
            "default": "80mm"
          }
        },
        "type": "object",
        "required": [
          "order_id"
        ],
        "title": "PrintNotify"
      },
      "PrintStatus": {
        "properties": {
          "stale": {
            "type": "boolean",
            "title": "Stale"
          },
          "queue": {
            "type": "integer",
            "title": "Queue"
          }
        },
        "type": "object",
        "required": [
          "stale",
          "queue"
        ],
        "title": "PrintStatus"
      },
      "ProbePayload": {
        "properties": {
          "url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "ProbePayload"
      },
      "Profile": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "address": {
            "type": "string",
            "title": "Address"
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url"
          },
          "timezone": {
            "type": "string",
            "title": "Timezone"
          },
          "language": {
            "type": "string",
            "title": "Language"
          }
        },
        "type": "object",
        "required": [
          "name",
          "address",
          "timezone",
          "language"
        ],
        "title": "Profile",
        "description": "Basic tenant profile information."
      },
      "PushKeys": {
        "properties": {
          "p256dh": {
            "type": "string",
            "title": "P256Dh"
          },
          "auth": {
            "type": "string",
            "title": "Auth"
          }
        },
        "type": "object",
        "required": [
          "p256dh",
          "auth"
        ],
        "title": "PushKeys"
      },
      "PushSubscription": {
        "properties": {
          "endpoint": {
            "type": "string",
            "title": "Endpoint"
          },
          "keys": {
            "$ref": "#/components/schemas/PushKeys"
          }
        },
        "type": "object",
        "required": [
          "endpoint",
          "keys"
        ],
        "title": "PushSubscription"
      },
      "QueuedOrder": {
        "properties": {
          "op_id": {
            "type": "string",
            "title": "Op Id"
          },
          "table_code": {
            "type": "string",
            "title": "Table Code"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/api__app__routes_orders_batch__OrderLine"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "op_id",
          "table_code",
          "items"
        ],
        "title": "QueuedOrder",
        "description": "Order payload queued for later ingestion."
      },
      "ReplayRequest": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "ReplayRequest"
      },
      "RuleCreate": {
        "properties": {
          "event": {
            "type": "string",
            "title": "Event"
          },
          "channel": {
            "type": "string",
            "title": "Channel"
          },
          "target": {
            "type": "string",
            "title": "Target"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "event",
          "channel",
          "target"
        ],
        "title": "RuleCreate"
      },
      "SetPinPayload": {
        "properties": {
          "pin": {
            "type": "string",
            "title": "Pin"
          }
        },
        "type": "object",
        "required": [
          "pin"
        ],
        "title": "SetPinPayload",
        "description": "New PIN to assign to a staff member."
      },
      "SlaBreachIn": {
        "properties": {
          "window": {
            "type": "string",
            "title": "Window"
          },
          "breaches": {
            "items": {
              "$ref": "#/components/schemas/Breach"
            },
            "type": "array",
            "title": "Breaches"
          }
        },
        "type": "object",
        "required": [
          "window",
          "breaches"
        ],
        "title": "SlaBreachIn"
      },
      "StaffOrder": {
        "properties": {
          "item": {
            "type": "string",
            "title": "Item",
            "example": "Tea"
          },
          "price": {
            "type": "number",
            "title": "Price",
            "example": 1.5
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity",
            "example": 1
          }
        },
        "type": "object",
        "required": [
          "item",
          "price",
          "quantity"
        ],
        "title": "StaffOrder",
        "description": "Order item placed directly by staff."
      },
      "StartPayload": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "StartPayload",
        "description": "Email address requesting a magic link."
      },
      "StatusPayload": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "StatusPayload"
      },
      "StatusUpdate": {
        "properties": {
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "order_id": {
            "type": "integer",
            "title": "Order Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "phone",
          "order_id",
          "status"
        ],
        "title": "StatusUpdate"
      },
      "TableCreate": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "TableCreate",
        "description": "Payload for creating a new table."
      },
      "TablePosition": {
        "properties": {
          "x": {
            "type": "integer",
            "title": "X"
          },
          "y": {
            "type": "integer",
            "title": "Y"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          }
        },
        "type": "object",
        "required": [
          "x",
          "y"
        ],
        "title": "TablePosition",
        "description": "Coordinates for placing a table on a floor map."
      },
      "Tables": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "codes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Codes"
          }
        },
        "type": "object",
        "required": [
          "count"
        ],
        "title": "Tables",
        "description": "Table allocation payload."
      },
      "Tax": {
        "properties": {
          "mode": {
            "type": "string",
            "enum": [
              "regular",
              "composition",
              "unregistered"
            ],
            "title": "Mode"
          },
          "gstin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gstin"
          },
          "hsn_required": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hsn Required"
          }
        },
        "type": "object",
        "required": [
          "mode"
        ],
        "title": "Tax",
        "description": "Tax configuration for the tenant."
      },
      "TicketIn": {
        "properties": {
          "subject": {
            "type": "string",
            "title": "Subject",
            "description": "Short summary"
          },
          "body": {
            "type": "string",
            "title": "Body",
            "description": "Detailed description"
          },
          "screenshots": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Screenshots"
          }
        },
        "type": "object",
        "required": [
          "subject",
          "body"
        ],
        "title": "TicketIn"
      },
      "UnblockIPPayload": {
        "properties": {
          "ip": {
            "type": "string",
            "title": "Ip"
          }
        },
        "type": "object",
        "required": [
          "ip"
        ],
        "title": "UnblockIPPayload"
      },
      "UpdateQuantity": {
        "properties": {
          "quantity": {
            "type": "integer",
            "title": "Quantity",
            "example": 0
          },
          "admin": {
            "type": "boolean",
            "title": "Admin",
            "default": false,
            "example": true
          }
        },
        "type": "object",
        "required": [
          "quantity"
        ],
        "title": "UpdateQuantity",
        "description": "Payload for modifying an order line.\n\n``admin`` must be set to ``True`` and ``quantity`` to ``0`` to perform a\nsoft-cancel."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VoidRequest": {
        "properties": {
          "reason": {
            "type": "string",
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "reason"
        ],
        "title": "VoidRequest",
        "description": "Payload when staff requests a void."
      },
      "WebhookPayload": {
        "properties": {
          "event_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Id"
          },
          "order_id": {
            "type": "string",
            "title": "Order Id"
          },
          "invoice_id": {
            "type": "integer",
            "title": "Invoice Id"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "paid"
          },
          "signature": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Signature"
          }
        },
        "type": "object",
        "required": [
          "order_id",
          "invoice_id",
          "amount"
        ],
        "title": "WebhookPayload"
      },
      "WebhookTestRequest": {
        "properties": {
          "url": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "Url"
          },
          "event": {
            "type": "string",
            "title": "Event"
          }
        },
        "type": "object",
        "required": [
          "url",
          "event"
        ],
        "title": "WebhookTestRequest"
      },
      "api__app__routes_counter__OrderLine": {
        "properties": {
          "item_id": {
            "type": "string",
            "title": "Item Id"
          },
          "qty": {
            "type": "integer",
            "title": "Qty"
          }
        },
        "type": "object",
        "required": [
          "item_id",
          "qty"
        ],
        "title": "OrderLine"
      },
      "api__app__routes_counter__OrderPayload": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/api__app__routes_counter__OrderLine"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "OrderPayload"
      },
      "api__app__routes_guest_hotel__OrderLine": {
        "properties": {
          "item_id": {
            "type": "integer",
            "title": "Item Id"
          },
          "qty": {
            "type": "integer",
            "title": "Qty"
          }
        },
        "type": "object",
        "required": [
          "item_id",
          "qty"
        ],
        "title": "OrderLine"
      },
      "api__app__routes_guest_hotel__OrderPayload": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/api__app__routes_guest_hotel__OrderLine"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "OrderPayload"
      },
      "api__app__routes_guest_order__OrderLine": {
        "properties": {
          "item_id": {
            "type": "string",
            "title": "Item Id"
          },
          "qty": {
            "type": "integer",
            "title": "Qty"
          }
        },
        "type": "object",
        "required": [
          "item_id",
          "qty"
        ],
        "title": "OrderLine",
        "description": "Single line item for a guest order."
      },
      "api__app__routes_guest_order__OrderPayload": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/api__app__routes_guest_order__OrderLine"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "OrderPayload",
        "description": "Payload containing the items being ordered."
      },
      "api__app__routes_orders_batch__OrderLine": {
        "properties": {
          "item_id": {
            "type": "string",
            "title": "Item Id"
          },
          "qty": {
            "type": "integer",
            "title": "Qty"
          }
        },
        "type": "object",
        "required": [
          "item_id",
          "qty"
        ],
        "title": "OrderLine",
        "description": "Single line item for an order."
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "token"
          }
        }
      },
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}